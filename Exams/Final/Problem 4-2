"""
Write a function called getAverage(die, numRolls, numTrials), with the following specification:

def getAverage(die, numRolls, numTrials):
    """
      - die, a Die
      - numRolls, numTrials, are positive ints
      - Calculates the expected mean value of the longest run of a number
        over numTrials runs of numRolls rolls.
      - Calls makeHistogram to produce a histogram of the longest runs for all
        the trials. There should be 10 bins in the histogram
      - Choose appropriate labels for the x and y axes.
      - Returns the mean calculated to 3 decimal places
    """
A run of numbers counts the number of times the same dice value shows up in consecutive rolls. For example:

a dice roll of 1 4 3 has a longest run of 1
a dice roll of 1 3 3 2 has a longest run of 2
a dice roll of 5 4 4 4 5 5 2 5 has a longest run of 3
When this function is called with the test case given in the file, it will return 5.312. Your simulation may give slightly different values.

Paste your entire function (including the definition) in the box.

Restrictions:

Do not import or use functions or methods from pylab, numpy, or matplotlib.
Do not leave any debugging print statements when you paste your code in the box.
"""

def getAverage(die, numRolls, numTrials):
    """
      - die, a Die
      - numRolls, numTrials, are positive ints
      - Calculates the expected mean value of the longest run of a number
        over numTrials runs of numRolls rolls.
      - Calls makeHistogram to produce a histogram of the longest runs for all
        the trials. There should be 10 bins in the histogram
      - Choose appropriate labels for the x and y axes.
      - Returns the mean calculated to 3 decimal places
    """
    longestRuns = []
    for i in range(numTrials):
        longestRun = 1
        currentRun = 1
        rolls = [die.roll() for j in range(numRolls)]
        for k in range(1,len(rolls)):
            if rolls[k-1] == rolls[k]:
                currentRun += 1
                if currentRun > longestRun:
                    longestRun = currentRun
            else:
                currentRun = 1
        longestRuns.append(longestRun)
    makeHistogram(longestRuns, 10,'Longest Run','Frequency','Longest Runs Histogram')
    i,j = getMeanAndStd(longestRuns)
    return round(i,3)
